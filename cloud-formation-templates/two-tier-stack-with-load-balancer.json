{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "AppName": {
            "Description": "Application Name",
            "Type": "String"
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "LoadBalancerSubnetId1": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing public subnet from AZ 1",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "LoadBalancerSubnetId2": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing public subnet from AZ 2",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "WebServerInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing private subnet in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "WebServerInstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": ["t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.13.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "OSType": {
            "Description": "Name of the operating system ",
            "Type": "String",
            "Default": "Windows2016",
            "AllowedValues": ["Windows2016", "Windows2012", "RedHat6", "CentOS6", "AmazonLinux2", "Ubuntu16"]
        },
        "InfraSecurityGroupId": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "SecurityGroupId of an existing security group in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be an existing security group in the selected Virtual Private Cloud."
        },
        "DBSubnetId1": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing subnet from AZ 1",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "DBSubnetId2": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing subnet from AZ 2",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "DBInstanceType": {
            "Description": "RDS instance type",
            "Type": "String",
            "Default": "db.t2.small",
            "AllowedValues": ["db.m5.large", "db.m5.xlarge", "db.m5.2xlarge", "db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.t2.micro", "db.t2.small", "db.t2.large", "db.t2.xlarge", "db.t2.2xlarge"],
            "ConstraintDescription": "must be a valid RDS instance type."
        },
        "DBName": {
            "Description": "The database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBUser": {
            "NoEcho": "true",
            "Description": "The database admin account username",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBPassword": {
            "NoEcho": "true",
            "Description": "The database admin account password",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "DBPort": {
            "Description": "Database port",
            "Type": "Number",
            "Default": "3306"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "ap-south-1": {
                "Windows2016": "ami-0288801f302f4b6c6",
                "Windows2012": "ami-02458485d424b9c17",
                "RedHat6": "ami-04377cb6419764e84",
                "CentOS6": "ami-04377cb6419764e84",
                "AmazonLinux2": "ami-04377cb6419764e84",
                "Ubuntu16": "ami-04377cb6419764e84"
            }
        }
    },
    "Resources": {
        "AppLoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": {
                    "Fn::Join": ["", [{
                        "Ref": "AppName"
                    }, "LoadBalancer security group"]]
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "10.13.0.0/16"
                }]
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": {
                    "Fn::Join": ["", [{
                        "Ref": "AppName"
                    }, "instance security group"]]
                },
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": {
                            "Ref": "AppLoadBalancerSecurityGroup"
                        }
                    }
                ]
            }
        },
        "WebServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": {
                    "Ref": "WebServerInstanceType"
                },
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMI", {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "OSType"
                        }
                    ]
                },
                "NetworkInterfaces": [{
                    "GroupSet": [{
                        "Ref": "WebServerSecurityGroup"
                    }, {
                        "Ref": "InfraSecurityGroupId"
                    }],
                    "AssociatePublicIpAddress": "false",
                    "DeviceIndex": "0",
                    "DeleteOnTermination": "true",
                    "SubnetId": {
                        "Ref": "WebServerInstanceSubnetId"
                    }
                }],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Ref": "AppName"
                    }
                }]
            }
        },
        "DBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": {
                    "Fn::Join": ["", [{
                        "Ref": "AppName"
                    }, "DB security group"]]
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": {
                        "Ref": "DBPort"
                    },
                    "ToPort": {
                        "Ref": "DBPort"
                    },
                    "SourceSecurityGroupId": {
                        "Ref": "WebServerSecurityGroup"
                    }
                }]
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": {
                    "Fn::Join": ["", [{
                        "Ref": "AppName"
                    }, "DB subnet group"]]
                },
                "DBSubnetGroupName": {
                    "Ref": "AppName"
                },
                "SubnetIds": [{
                    "Ref": "DBSubnetId1"
                }, {
                    "Ref": "DBSubnetId2"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Ref": "AppName"
                    }
                }]
            }
        },
        "DBInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBInstanceIdentifier": {
                    "Ref": "AppName"
                },
                "DBName": {
                    "Ref": "DBName"
                },
                "AllocatedStorage": "10",
                "DBInstanceClass": {
                    "Ref": "DBInstanceType"
                },
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "VPCSecurityGroups": [{
                    "Ref": "DBSecurityGroup"
                }],
                "Engine": "MySQL",
                "EngineVersion": "5.6.41",
                "MasterUsername": {
                    "Ref": "DBUser"
                },
                "Port": {
                    "Ref": "DBPort"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                }
            }
        },
        "AppLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Ref": "AppName"
                },
                "Scheme": "internet-facing",
                "SecurityGroups": [{
                    "Ref": "AppLoadBalancerSecurityGroup"
                }],
                "Subnets": [{
                        "Ref": "LoadBalancerSubnetId1"
                    },
                    {
                        "Ref": "LoadBalancerSubnetId2"
                    }
                ],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Ref": "AppName"
                    }
                }],
                "Type": "application"
            }
        },
        "AppLoadBalancerTargetGroup": {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties" : {
              "Name" : {
                  "Ref": "AppName"
              },
              "Port" : "80",
              "Protocol" : "HTTP",
              "Targets" : [ {
                  "Id": {
                      "Ref": "WebServerInstance"
                  }
              } ],
              "VpcId" : {
                 "Ref": "VpcId"
              }
            }
          }
    }
}