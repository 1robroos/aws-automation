{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "AppName": {
            "Description": "Application Name",
            "Type": "String"
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "WebServerInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetId of an existing private subnet in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "WebServerInstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.13.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "OSType": {
            "Description": "Name of the operating system ",
            "Type": "String",
            "Default": "Windows2016",
            "AllowedValues": [
                "Windows2016",
                "Windows2012",
                "RedHat6",
                "CentOS6",
                "AmazonLinux2",
                "Ubuntu16"
            ]
        },
        "InfraSecurityGroupId": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "SecurityGroupId of an existing security group in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be an existing security group in the selected Virtual Private Cloud."
        },
        "AppHostName": {
            "Description": "Application Host Name",
            "Type": "String"
        },
        "ProjectName": {
            "Description": "Project Name",
            "Type": "String"
        },
        "ProjectCode": {
            "Description": "Project Code",
            "Type": "String"
        },
        "ChangeNumber": {
            "Description": "Change Number",
            "Type": "String"
        },
        "PrimaryOwnerEmail": {
            "Description": "Primary owner email address to notify alerts",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
        "SecondaryOwnerEmail": {
            "Description": "Secondary owner email address to notify alerts",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
        "ProvisionType": {
            "Description": "Provision Type",
            "Type": "String"
        },
        "ProvisionDate": {
            "Description": "Date format: 2018/11/13",
            "Type": "String",
            "AllowedPattern": "^\\d{4}(-\\d{2}){2}$"
        },
        "ExpiryDate": {
            "Description": "Date format: 2018/11/13",
            "Type": "String",
            "AllowedPattern": "^\\d{4}(-\\d{2}){2}$"
        },
        "ServerRole": {
            "Description": "Service Role",
            "Type": "String"
        },
        "BusinessUnit": {
            "Description": "Business Unit",
            "Type": "String"
        },
        "Snapshot": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "To know shapshot is enabled or not ?",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "ap-south-1": {
                "Windows2016": "ami-0288801f302f4b6c6",
                "Windows2012": "ami-05c8869cb862ef323",
                "RedHat6": "ami-0d63e0844aae02845",
                "CentOS6": "ami-0ec3dab6fe2a3d13a",
                "AmazonLinux2": "ami-0d63e0844aae02845",
                "Ubuntu16": "ami-02b04a38bb6c3f9e4"
            }
        }
    },
    "Resources": {
        "WebServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": {
                    "Ref": "WebServerInstanceType"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "OSType"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "InfraSecurityGroupId"
                            }
                        ],
                        "AssociatePublicIpAddress": "false",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "WebServerInstanceSubnetId"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "Tags": [
                    {
                        "Key": "name",
                        "Value": {
                            "Ref": "AppName"
                        }
                    },
                    {
                        "Key": "hostname",
                        "Value": {
                            "Ref": "AppHostName"
                        }
                    },
                    {
                        "Key": "os_type",
                        "Value": {
                            "Ref": "OSType"
                        }
                    },
                    {
                        "Key": "application",
                        "Value": {
                            "Ref": "AppName"
                        }
                    },
                    {
                        "Key": "project_name",
                        "Value": {
                            "Ref": "ProjectName"
                        }
                    },
                    {
                        "Key": "project_code",
                        "Value": {
                            "Ref": "ProjectCode"
                        }
                    },
                    {
                        "Key": "change_no",
                        "Value": {
                            "Ref": "ChangeNumber"
                        }
                    },
                    {
                        "Key": "primary_owner",
                        "Value": {
                            "Ref": "PrimaryOwnerEmail"
                        }
                    },
                    {
                        "Key": "secondary_owner",
                        "Value": {
                            "Ref": "SecondaryOwnerEmail"
                        }
                    },
                    {
                        "Key": "provision_type",
                        "Value": {
                            "Ref": "ProvisionType"
                        }
                    },
                    {
                        "Key": "provision_date",
                        "Value": {
                            "Ref": "ProvisionDate"
                        }
                    },
                    {
                        "Key": "expiry_date",
                        "Value": {
                            "Ref": "ExpiryDate"
                        }
                    },
                    {
                        "Key": "server_role",
                        "Value": {
                            "Ref": "ServerRole"
                        }
                    },
                    {
                        "Key": "business_unit",
                        "Value": {
                            "Ref": "BusinessUnit"
                        }
                    },
                    {
                        "Key": "snapshot",
                        "Value": {
                            "Ref": "Snapshot"
                        }
                    }
                ]
            }
        },
        "RootRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:DescribeAssociation",
                                        "ssm:GetDeployablePatchSnapshotForInstance",
                                        "ssm:GetDocument",
                                        "ssm:GetManifest",
                                        "ssm:GetParameters",
                                        "ssm:ListAssociations",
                                        "ssm:ListInstanceAssociations",
                                        "ssm:PutInventory",
                                        "ssm:PutComplianceItems",
                                        "ssm:PutConfigurePackageResult",
                                        "ssm:UpdateAssociationStatus",
                                        "ssm:UpdateInstanceAssociationStatus",
                                        "ssm:UpdateInstanceInformation"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssmmessages:CreateControlChannel",
                                        "ssmmessages:CreateDataChannel",
                                        "ssmmessages:OpenControlChannel",
                                        "ssmmessages:OpenDataChannel"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2messages:AcknowledgeMessage",
                                        "ec2messages:DeleteMessage",
                                        "ec2messages:FailMessage",
                                        "ec2messages:GetEndpoint",
                                        "ec2messages:GetMessages",
                                        "ec2messages:SendReply"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudwatch:PutMetricData"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DescribeInstanceStatus"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ds:CreateComputer",
                                        "ds:DescribeDirectories"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetBucketLocation",
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:GetEncryptionConfiguration",
                                        "s3:AbortMultipartUpload",
                                        "s3:ListMultipartUploadParts",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Resource": "arn:aws:kms:ap-south-1:570193561522:key/f501007d-4e2f-4474-a224-648df3141fc5"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:GetParameter"
                                    ],
                                    "Resource": "arn:aws:ssm:*:*:parameter/domain/*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "inspector:*",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeTags",
                                        "sns:ListTopics",
                                        "events:DescribeRule",
                                        "events:ListRuleNamesByTarget"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringEquals": {
                                            "iam:PassedToService": [
                                                "inspector.amazonaws.com"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "iam:CreateServiceLinkedRole",
                                    "Resource": "arn:aws:iam::*:role/aws-service-role/inspector.amazonaws.com/AWSServiceRoleForAmazonInspector",
                                    "Condition": {
                                        "StringLike": {
                                            "iam:AWSServiceName": "inspector.amazonaws.com"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudwatch:PutMetricData",
                                        "ec2:DescribeTags",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams",
                                        "logs:DescribeLogGroups",
                                        "logs:CreateLogStream",
                                        "logs:CreateLogGroup"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:PutParameter"
                                    ],
                                    "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RootInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RootRole"
                    }
                ]
            }
        }
    }
}